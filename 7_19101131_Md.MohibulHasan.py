# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m7qZ8eXvFXsIdo5McRaYXSTUYNLjGs4A

Collecting dataset and loading using Pandas
"""

import numpy as np
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn import tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import seaborn as sns
from sklearn.neural_network import MLPClassifier
from sklearn import svm
from sklearn.ensemble import RandomForestClassifier
from sklearn.decomposition import PCA
ass_file=pd.read_csv('Melanoma TFRecords 256x256.csv')
ass_file.head(2)

"""Necessary Preprocessing"""

ass_file_subset=ass_file[ass_file['image_name'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['patient_id'].notnull()]
ass_file_subset=ass_file_subset[ass_file['sex'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['anatom_site_general_challenge'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['diagnosis'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['benign_malignant'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['tfrecord'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['width'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['height'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['patient_code'].notnull()]
ass_file_subset=ass_file_subset[ass_file_subset['age_approx'].notnull()]
ass_file_subset['sex']=ass_file_subset['sex'].map({'female':0,'male':1})
ass_file_subset['anatom_site_general_challenge']=ass_file_subset['anatom_site_general_challenge'].map({'head/neck':0,'upper extremity':1, 'lower extremity':2, 'palms/soles':3, 'oral/genital':4, 'torso':5})
ass_file_subset['diagnosis']=ass_file_subset['diagnosis'].map({'unknown':0,'nevus':1, 'melanoma':2, 'melanoma':3, 'seborrheic keratosis':4, 'lentigo NOS':5, 'lichenoid keratosis': 6, 'solar lentigo':7, 'cafe-au-lait macule':8, 'atypical melanocytic proliferation':9})
scaler=MinMaxScaler()
X=ass_file_subset[['sex','age_approx','anatom_site_general_challenge', 'diagnosis', 'tfrecord', 'width','height' ,'patient_code']]
Y=ass_file_subset[['target']]
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2 ,random_state = 1)
scaler.fit(X_train)
X_train=scaler.transform(X_train)
X_test= scaler.transform(X_test)

"""SVM"""

model.fit(X_train, y_train)
predictions = model.predict(X_test)

MLP_acc=accuracy_score(y_test, predictions)

model=RandomForestClassifier(n_estimators=100)


model.fit(X_train, y_train)


predictions = model.predict(X_test)

rndm_acc=accuracy_score(y_test, predictions)

pca = PCA(n_components=6)
x_train = pca.fit_transform(X_train)
x_test = pca.transform(X_test)
model = svm.SVC(kernel='linear')
model.fit(X_train, y_train) 
predictions = model.predict(X_test)
PCA_SVM=accuracy_score(y_test, predictions)
model = MLPClassifier(hidden_layer_sizes=(150,100,50), max_iter=300,activation = 'relu',solver='adam',random_state=1)
model.fit(X_train, y_train) 
predictions = model.predict(X_test)
PCA_MLP=accuracy_score(y_test, predictions)
model = RandomForestClassifier(n_estimators=100)
model.fit(X_train, y_train) 
predictions = model.predict(X_test)
PCA_RNDM=accuracy_score(y_test, predictions)

"""Plot"""

labels = ['SVM', 'MLP','RandomF']
norm = [svm_acc,MLP_acc,rndm_acc]
pca = [PCA_SVM,PCA_MLP,PCA_RNDM]
x = np.arange(len(labels))
fig, ax = plt.subplots()
rects1 = ax.bar(x -0.25,norm , width = 0.25, label='Pre PCA')
rects2 = ax.bar(x + 0, pca, width = 0.25, label='post PCA')
ax.set_xticks(x)
ax.set_xticklabels(labels)
ax.legend()
fig.tight_layout()
plt.show()

"""MLPclassifier"""